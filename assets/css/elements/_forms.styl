/**
 * Forms
 * @section
 */

/*------------------------------------*\
  $FORMS
\*------------------------------------*/
/**
 * Text Field
 *
 * ##### Acceptable Use
 *
 * All form fields should have an associated label for accessibility.
 *
 * @section
 * @sectionof Forms
 *
 * @example
 * <fieldset>
 *   <p>
 *     <label for="text">Text Input</label>
 *     <input id="text" type="text" placeholder="Text Input"/>
 *   </p>
 *   <p>
 *     <label for="textarea">Textarea</label>
 *     <textarea id="textarea" rows="8" cols="48" placeholder="Enter your message here"></textarea>
 *   </p>
 *   <p>
 *     <label for="disabled_text">Disabled Input</label>
 *     <input id="disabled_text" type="text" placeholder="Disabled" disabled/>
 *   </p>
 * </fieldset>
 */

label {
  color: $color-grey-light;
  display: block;
  font-size: pxToRem($font-size-small);
  font-weight: normal;
  line-height: $line-height-small;
  margin-bottom: 5px;
  cursor: pointer;
}

::-webkit-input-placeholder {
  font-family: inherit;
}
::-moz-placeholder {
  font-family: inherit;
}
:-ms-input-placeholder {
  font-family: inherit;
}

input {
  font-family: inherit;
}

/*
 * 1. Buttons and inputs should have the same padding so that they can line up
 *    next to one another.
 * 2. Inputs do not strictly adhere to line-height and font-size to determine
 *    the height of the element and adds about 1.23px top/bottom to the height.
 *    We can compensate for this by setting the line-height to normal for both
 *    the button and the input.
 */
textarea,
input[type=text],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="color"] {
  background-color: #fff;
  border: 1px solid $color-grey-border;
  border-radius: $border-radius;
  box-shadow: inset 0 3px 0 rgba(0,0,0,0.05);
  box-sizing: border-box;
  color: $color-grey-body;
  font-family: inherit;
  font-size: pxToRem($font-size-medium);
  height: inherit;  // needed to override Bootstrap fixed height
  line-height: normal; /* [2] */
  margin-bottom: 0;
  padding: pxToRem(6px 10px); /* [1] */
  transition: border linear 0.2s;
  width: 100%;

  &:focus {
    border: 1px solid $color-grey-body;
    box-shadow: inset 0 3px 0 rgba(0,0,0,0.05);
    outline: 0;
  }

  &:disabled,
  &.disabled {
    color: #999999;
    background: #f0f0f0;
  }
}

textarea {
  resize: vertical;
  min-height: 75px;
}





/**
 * Select Menu
 *
 * ##### Acceptable Use
 *
 * Use a select menu when the user needs to select from a list of six or more options.
 *
 * ##### Avoid
 *
 * Avoid using select menus when there are five or less options.</p><p>Avoid multi select
 * menus since not all browsers have keyboard support for them and not all users
 * understand how to use them.
 *
 * @section
 * @sectionof Forms
 *
 * @example
 * <label for="select">Select</label>
 * <select id="select">
 *   <option>Option One</option>
 *   <option>Option Two</option>
 *   <option>Option Three</option>
 *   <option>Option Four</option>
 *   <option>Option Five</option>
 *   <option>Option Six</option>
 * </select>
 */
select {
  background-color: #fff;
  border: 1px solid $color-grey-border;
  color: $color-grey-body;
  font-family: inherit;
  font-size: pxToRem($font-size-medium);
  height: pxToRem(30px);
  line-height: $line-height-medium;
  margin: 0;
  padding: pxToRem(4px 6px);
  width: 100%;

  &:focus {
    border: 1px solid $color-grey-body;
    outline: none;
  }
}





/**
 * Checkbox
 *
 * ##### Acceptable Use
 *
 * Each checkbox must have a label next to it.
 *
 * @section
 * @sectionof Forms
 *
 * @example
 * <form action="#">
 *   <fieldset>
 *     <legend>List of checkboxes</legend>
 *     <ul>
 *       <li>
 *         <input name="checkbox" type="checkbox" id="choiceA" checked/>
 *         <label for="choiceA">Choice A</label>
 *       </li>
 *       <li>
 *         <input name="checkbox" type="checkbox" id="choiceB"/>
 *         <label for="choiceB">Choice B</label>
 *       </li>
 *       <li>
 *         <input name="checkbox" type="checkbox" id="choiceC"/>
 *         <label for="choiceC">Choice C</label>
 *       </li>
 *     </ul>
 *   </fieldset>
 * </form>
 */

/**
 * Radio Buttons
 *
 * ##### Acceptable Use
 *
 * Use radio buttons when the user needs to select from a list of less than five options.
 *
 * ##### Avoid
 *
 * Avoid using radio buttons when there are more than five options. Those options would be
 * better displayed as a [select menu](#select-menu).
 *
 * @section
 * @sectionof Forms
 *
 * @example
 * <form action="#">
 *   <fieldset>
 *     <legend>List of radio buttons</legend>
 *     <ul>
 *       <li>
 *         <input name="radio" type="radio" id="option1" checked/>
 *         <label for="option1">Option 1</label>
 *       </li>
 *       <li>
 *         <input name="radio" type="radio" id="option2"/>
 *         <label for="option2">Option 2</label>
 *       </li>
 *       <li>
 *         <input name="radio" type="radio" id="option3"/>
 *         <label for="option3">Option 3</label>
 *       </li>
 *     </ul>
 *   </fieldset>
 * </form>
 */

/*
 * Increase the size of radio buttons and check boxes because the default browser
 * sizes are too small, especially for those with motor disabilities or the elder.
 * @see https://getsatisfaction.com/familysearch/topics/larger-radio-buttons-please
 * @see https://getsatisfaction.com/familysearch/topics/microscopic-sized-check-boxes
 *
 * 1. Since using `scale()` makes the input fields look pixelated, we'll have to create
 *    custom checkboxes and radio buttons, ensuring that they are still accessible. To do
 *    that we'll hide the default checkbox or radio button and use the label element
 *    to make it look like a checkbox or radio button.
 * 2. Ensure empty state does not add extra padding/margin that would break field group
 *    with checkbox, or checkboxes or radio buttons by themselves.
 *
 *    For labels that need to show text only for screen readers, use aria-label on the
 *    label element.
 *    @example <label aria-label="Label for screen readers only"></label>
 */
input[type="checkbox"],
input[type="radio"] {
  @extends $visually-hidden;  /* [1] */

  + label {
    margin: 0; /* [2] */
  }

  + label:before {
    background-color: #fff;
    background-position: center;
    background-repeat: no-repeat;
    border: 1px solid $color-grey-border;
    content: '';
    display: inline-block;
    height: pxToRem(20px);
    position: relative;
    transition: background-size 0.15s ease-out, background-color 0.15s ease-out;
    vertical-align: middle;
    width: pxToRem(20px);
  }

  /* [2] */
  + label:not(:empty) {
    margin-bottom: 5px;

    &:before {
      margin-right: 10px;
    }
  }

  &:focus + label:before {
    outline: auto 2px Highlight;
    outline: auto 5px -webkit-focus-ring-color;
  }

  &:checked + label:before {
    border: 1px solid #246bdb;
    background-color: #3073dd;
  }

  &:disabled + label:before {
    border: 1px solid $color-grey-border;
    background-color: #f0f0f0;
  }
}

// checkbox
input[type="checkbox"] {

  + label:before {
    border-radius: $border-radius;
    background-size: 0%;
  }

  /* [2] */
  + label:not(:empty):before {
    top: -1px;
  }

  &:checked + label:before {
    background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2020%2020%22%3E%3Cpath%20fill%3D%22%23fff%22%20d%3D%22M7%2016.6c-0.2%200-0.3-0.1-0.5-0.2l-5.9-5.9c-0.1-0.1-0.2-0.3-0.2-0.5%200-0.2%200.1-0.3%200.2-0.5l2-1.9c0.1-0.1%200.3-0.2%200.5-0.2%200.2%200%200.3%200.1%200.5%200.2l2.9%202.9c0.2%200.2%200.4%200.2%200.6%200.2%200.2%200%200.4-0.1%200.6-0.2l7.9-7.9c0.1-0.1%200.3-0.2%200.5-0.2s0.3%200.1%200.5%200.2l1.9%201.9C18.5%204.7%2018.6%204.8%2018.6%205s-0.1%200.3-0.2%200.5L7.5%2016.4C7.3%2016.5%207.2%2016.6%207%2016.6z%22%2F%3E%3C%2Fsvg%3E') !important;
    background-size: 70%;
  }

  &:checked:disabled + label:before {
    background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2020%2020%22%3E%3Cpath%20fill%3D%22%23bdbdbd%22%20d%3D%22M7%2016.6c-0.2%200-0.3-0.1-0.5-0.2l-5.9-5.9c-0.1-0.1-0.2-0.3-0.2-0.5%200-0.2%200.1-0.3%200.2-0.5l2-1.9c0.1-0.1%200.3-0.2%200.5-0.2%200.2%200%200.3%200.1%200.5%200.2l2.9%202.9c0.2%200.2%200.4%200.2%200.6%200.2%200.2%200%200.4-0.1%200.6-0.2l7.9-7.9c0.1-0.1%200.3-0.2%200.5-0.2s0.3%200.1%200.5%200.2l1.9%201.9C18.5%204.7%2018.6%204.8%2018.6%205s-0.1%200.3-0.2%200.5L7.5%2016.4C7.3%2016.5%207.2%2016.6%207%2016.6z%22%2F%3E%3C%2Fsvg%3E') !important;
  }
}

// radio
input[type="radio"] {

  + label:before {
    background-size: 100%;
    border-radius: 50%;
  }

  /* [2] */
  + label:not(:empty):before {
    top: -2px;
  }

  &:checked + label:before {
    background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D%220%200%2020%2020%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20fill%3D%22%23fff%22%3E%0A%20%20%3Ccircle%20cx%3D%2210%22%20cy%3D%2210%22%20r%3D%2210%22%3E%3C%2Fcircle%3E%0A%3C%2Fsvg%3E') !important;
    background-size: 30%;
  }

  &:checked:disabled + label:before {
    background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D%220%200%2020%2020%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20fill%3D%22%23bdbdbd%22%3E%0A%20%20%3Ccircle%20cx%3D%2210%22%20cy%3D%2210%22%20r%3D%2210%22%3E%3C%2Fcircle%3E%0A%3C%2Fsvg%3E') !important;
  }
}

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  border: 0;
  color: $color-grey-body;
  font-size: pxToRem($font-size-medium);
  line-height: remToPx($line-height-medium);
  margin: 0 0 5px 0;
}